
version: 2.1
orbs:
  python: circleci/python@2.0.3
  heroku: circleci/heroku@1.2.6

""""
Fichier permettant de définir les jobs du pipeline CI/CD.
le Lint vérifie la conformité du code aux bonnes pratiques.
Build and test sert a construire et tester l'application.
Build and Push permet de construire une image docker et de la
poush sur un dockerhub.
Ensuite Deploy permet de déployer l'application sur Heroku.
""""

jobs:
  lint: # Ajout du job de linting
    docker:
      - image: cimg/python:3.12.0
    steps:
      - checkout # Récupère les fichiers du projet
      - python/install-packages: # Installation des packages
          pkg-manager: pip
      - run:
          name: Run linting
          command: ruff check .
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  build_and_test: # Job permettant de construire et tester l'application
    docker:
      - image: cimg/python:3.12.0


    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Collect static
          command: python manage.py collectstatic --noinput # Récupère les fichiers static
      - run:
          name: Run tests
          command: python -m pytest # Fais passer les tests
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  build-and-push-docker-image: # Job permettant de construire et de push l'image docker
    docker:
      - image: cimg/python:3.12.0
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: setup
          command: |
            python -m venv venv &&
            source venv/bin/activate &&
            pip install -r requirements.txt


      - run:
          name: build and push docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t my-image:latest .
            #docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$TAG .
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            # docker push $DOCKER_USERNAME/my-image:$TAG

  deploy: # Job permettant de déployer l'application
    docker:
      - image: cimg/python:3.12.0
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image to Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_KEY} heroku config:set SECRET_KEY=$SECRET_KEY -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_KEY} heroku config:set DSN=$DSN -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_KEY} heroku container:login
            HEROKU_API_KEY=${HEROKU_KEY} heroku container:push -a ${HEROKU_APP_NAME} web
            HEROKU_API_KEY=${HEROKU_KEY} heroku container:release -a ${HEROKU_APP_NAME} web

workflows: # Configuration du workflow et des dépendances des jobs
  test_my_app:
    jobs:
      - lint
      - build_and_test
      - build-and-push-docker-image: # Ne se déploie uniquement si le job build_and_test et le lint sont terminés
          requires:
            - build_and_test
            - lint
          filters:
            branches:
              only: master
      - deploy: # Requiert que build-and-push-docker-image soit terminé pour pouvoir se déployer
          requires:
            - build-and-push-docker-image
          filters:
            branches:
              only: master    
